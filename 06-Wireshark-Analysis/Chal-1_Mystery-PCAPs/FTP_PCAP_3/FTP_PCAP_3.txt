FTP
FTP is a standard network protocol used for the transfer of files between computers on a network. FTP is built on a client-server architecture using seperate control and data conenctione between the client and the server. FTP allows clients to connect using a username and password, or annonomously if the server is set up to accept annonomous log-ins. FTP is often secured with SSH (SFTP) or SSL/TLS (FTPS). FTP is able to run in active or passive mode which aids in determining how the connection is established. A TCP connection is made in both cases from the computers port to port '21/20'. In active mode the client starts listening for incoming data connections on its port, and then sends the server the FTP command to tell the server that on which port it is listening. Passive mode is used when the client is behind a firewall and is unable to accept incoming connections. The client sends the server a 'PASV' command and the server responds with an IP address and server port number form the server. Four data representations can be used while transfering data  over the network, ASCII mode, IMAGE mode, EBCDIC mode, LOCAL mode.

ASCII mode is used for text, where data is converted if needed to '8-bit' ASCII before transmission and after, also if necessary, to the recieving host. This method only works for plain text data. IMAGE mode also known as binary mode, is the server sending each file byte by byte and the recipient stores the bytestream as it recieves it. This method is recommend for all methods of data. EBCDIC mode used for plain texts between hosts, but uses the EBCDIC character set in the transmission of data. LOCAL mode allows two computers with identical setups to send data without it being needed for conversion. Data transfer can be done in three modes as well, STREAM mode, BLOCK mode, COMPRESSED mode. Stream mode is sent as a continous stream leaving all the processing up to the TCP connection, no end-of-file is needed unless the the data is divided. BLOCK mode is where FTP breaks the data into blocks, Block header, Byte count, and Data field, then passes it to TCP. Lastly, COMPRESSED mode where data is compressed using an algorithm and then sent over. FTP is fairly insecure.


This FTP stream is about a 7 minute connection, which is established with a TCP handshake in the beging and a TCP discnnect at the end. The client '172.16.16.128' communcates to the server ' 172.16.16.121' between port '2555' and port '21'. Initially after the TCP handshake, authentication is established. The username and password is seen in the packet sniffing. The user 'salesxfer' and the password 'p@ssword' is used to the 'file-zilla server version 0.9.34 beta'. The client then passes to the server the command to turn on 'UTF8 mode on' and the server responds with the '200' ok affirmation. The client passes some investigative commands, understanding the system and where the user is located. The user then checks to see if they are in the '/backup' folder of the computer, and thne proceeds to move into passive mode using the 'PASV' command. In passive mode, the client requests to 'STOR' ( store ) CSV files. The following packets on the stream are the server establishing a TCP connection again and transfering the packets to the client. After the file transfer is complete the connection is terminated.

The general size of the packets in the communication stream between the client and the server is between '60-105' bytes. while during the 'STOR' data transfer the size of the packets are '1.514' kilobytes. During the TCP handshake for the 'STOR' command the client and server use different ports. During this session they are communicating on port '2559' and on port '49166' instead of on the FTP port '21'. The client and server opened up a second TCP connection within the already established TCP connection, thus after the termination of one TCP handshake, the second TCP was then shown to be terminated as well. s