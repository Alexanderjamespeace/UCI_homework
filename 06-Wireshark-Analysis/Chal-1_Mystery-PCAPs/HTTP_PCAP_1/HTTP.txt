1-Mystery
What is happening in 1-mystery:
    In 1-mystery:  
        a TCP handshake completed through port 80(http)
        A http post form submission, test post
        followed by a get request 
        post the get request is a series of ack tags send back and forth from port 80 and the communication port

Hyper Text Transport Protocol( HTTP )
    The Hyper Text Transport Protocol is used for communicating between a web client and a web server, giving the web client access to a web resource. The web resource could be a static or dynamic resource. If it is a static resource 'post' request wont affect the current state of the resource. On a dynamic resource, when the dynamic port request is sent to the web server, the web server then posts that requests to a document and sends it back to web client. The web client now can see the information that they pushed to the web server, or the information has been pushed/ stored to a separate document,such as a log file, or database. HTTP Communicates HTML ( HyperText Markup Language ) between the web server and the web client. Http protocol is a simple protocol script in fairly plain text allowing it to be read over it's packets. 
    
	HTTP requests end each line with two escape characters(\n\r) line feed/new line, and carriage return. The headers communicate different response information to the web server. HTTP is acessed through uniform refernce location (URLs). In the HTTP request, the User-Agent header tells the web server which kind of browser is sending the request. The Host header tells the web server what DNS name/IP address used in the request. The Accept header tells the web server what kind of response data network application can handle. After the server recieves the HTTP Request it drafts a HTTP response which it then sends tot he client with headers like the request dictating to the computer what to do next, such as setting cookies or running. The actual content of the HTTP response and requests are a combination of HTML, Javascript, JSON, and more. 



    The client, 172.16.16.128, initially opens up a tcp connection between a web server, 69.163.176.56. After the connection is established the client sends a 'POST' request to the web server. The 'POST' request post the information that the client submits in the form on the website being accessed. The 'POST' request submits info to the server as mentioned above in the HTTP protocol. The web server then sends back an '[ACK]' response to the client all communicating from port '1989' on the client computer to port '80' on the web server. The post request is sent to the host 'www.chrissander.org' with a connection request to keep the page 'alive'. In response to the post request the web server sends back a response to set a cookie for the client's current session. The client then clicks on a link on the site and sends a 'GET' request to the web server, which in response sends the client to a new page on the site. The client sends the requests to the server and in response the server sends back over port 80 to the client what to do. In this case it was begin a cookie session.
	
	The client submits to the web server a 'POST' request and a 'GET' request. After these two request, each time the server and client exchange in a dialogue, where the server sends the client packets to be assembled to make it's complete response to the request. In each installment of packets around 1.4 kilo-bytes of data is being sent over. The server specifies in which order these packets should be arranged. After each packet is received the client issues a '[ACK]' response to the server confirming what packets to send next. Through this process the web server is able to create a dialogue with the client asking the client what information it wants and to send it. At the end of the dialogue the two machines send each other '[FIN]' and '[ACK]' statements to confirm that they are closing the TCP handshake connection.
	
	(files containing snippets from the pcap specifying the different data is in the folder)











    
